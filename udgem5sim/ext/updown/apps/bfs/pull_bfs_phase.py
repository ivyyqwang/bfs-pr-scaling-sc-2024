from linker.EFAProgram import efaProgram

## Global constants

@efaProgram
def EFA_BfsPullPhase(efa):
  efa.code_level = 'machine'
  state0 = efa.State("udweave_init") #Only one state code 
  efa.add_initId(state0.state_id)
  ## Static declarations
  ## Scoped Variable "graph" uses Register X16, scope (0)
  ## Scoped Variable "nlist_ptr" uses Register X17, scope (0)
  ## Scoped Variable "sibling_vid" uses Register X18, scope (0)
  ## Scoped Variable "num_siblings" uses Register X19, scope (0)
  ## Scoped Variable "orig_vid" uses Register X20, scope (0)
  ## Scoped Variable "parent" uses Register X21, scope (0)
  ## Scoped Variable "nlist_bound" uses Register X22, scope (0)
  ## Scoped Variable "num_pending" uses Register X23, scope (0)
  ## Scoped Variable "iteration" uses Register X24, scope (0)
  ## Scoped Variable "is_active" uses Register X25, scope (0)
  ## Param "deg_op" uses Register X8, scope (0->2)
  ## Param "orig_vid_op" uses Register X9, scope (0->2)
  ## Param "vid_op" uses Register X10, scope (0->2)
  ## Param "neighbors_op" uses Register X11, scope (0->2)
  ## Param "dist_op" uses Register X12, scope (0->2)
  ## Param "parent_op" uses Register X13, scope (0->2)
  ## Param "split_range_op" uses Register X14, scope (0->2)
  ## Param "padding_op" uses Register X15, scope (0->2)
  ## Param "vertex_addr" uses Register X3, scope (0->2)
  ## Scoped Variable "tmp_lm_ptr" uses Register X26, scope (0->2)
  ## Scoped Variable "evw" uses Register X27, scope (0->2)
  ## Scoped Variable "evw" uses Register X27, scope (0->2->3)
  ## Scoped Variable "evw" uses Register X27, scope (0->2->4)
  ## Param "e0" uses Register X8, scope (0->9)
  ## Param "e1" uses Register X9, scope (0->9)
  ## Param "e2" uses Register X10, scope (0->9)
  ## Param "e3" uses Register X11, scope (0->9)
  ## Param "e4" uses Register X12, scope (0->9)
  ## Param "e5" uses Register X13, scope (0->9)
  ## Param "e6" uses Register X14, scope (0->9)
  ## Param "e7" uses Register X15, scope (0->9)
  ## Param "curr_nlist_addr" uses Register X3, scope (0->9)
  ## Scoped Variable "tmp_nlist_ptr" uses Register X26, scope (0->9)
  ## Scoped Variable "read_vertex_evw" uses Register X27, scope (0->9)
  ## Scoped Variable "tmp_vertex_addr" uses Register X28, scope (0->9)
  ## Scoped Variable "orig_vertex_addr" uses Register X26, scope (0->9->10->11)
  ## Scoped Variable "cont" uses Register X27, scope (0->9->10->11)
  ## Param "deg_op" uses Register X8, scope (0->21)
  ## Param "orig_vid_op" uses Register X9, scope (0->21)
  ## Param "vid_op" uses Register X10, scope (0->21)
  ## Param "neighbors_op" uses Register X11, scope (0->21)
  ## Param "dist_op" uses Register X12, scope (0->21)
  ## Param "parent_op" uses Register X13, scope (0->21)
  ## Param "split_range_op" uses Register X14, scope (0->21)
  ## Param "padding_op" uses Register X15, scope (0->21)
  ## Param "vertex_addr" uses Register X3, scope (0->21)
  ## Scoped Variable "orig_vertex_addr" uses Register X26, scope (0->21->23->24)
  ## Scoped Variable "cont" uses Register X27, scope (0->21->23->24)
  ## Scoped Variable "evw" uses Register X26, scope (0->21->23->25)
  ## Param "deg_op" uses Register X8, scope (0->26)
  ## Param "orig_vid_op" uses Register X9, scope (0->26)
  ## Param "vid_op" uses Register X10, scope (0->26)
  ## Param "neighbors_op" uses Register X11, scope (0->26)
  ## Param "dist_op" uses Register X12, scope (0->26)
  ## Param "parent_op" uses Register X13, scope (0->26)
  ## Param "split_range_op" uses Register X14, scope (0->26)
  ## Param "padding_op" uses Register X15, scope (0->26)
  ## Param "vertex_addr" uses Register X3, scope (0->26)
  ## Scoped Variable "cont" uses Register X26, scope (0->26)
  ## Scoped Variable "tmp_lm_ptr" uses Register X27, scope (0->26)
  ## Scoped Variable "frontier_evw" uses Register X28, scope (0->26)
  ## Scoped Variable "tmp_vertex_addr" uses Register X29, scope (0->26)
  ## Scoped Variable "evw" uses Register X26, scope (0->26->27)
  ## Param "frontier_addr" uses Register X8, scope (0->28)
  ## Scoped Variable "sibling_bound" uses Register X26, scope (0->28)
  ## Scoped Variable "tmp_vertex_addr" uses Register X27, scope (0->28)
  ## Scoped Variable "frontier_ptr" uses Register X28, scope (0->28)
  ## Scoped Variable "evw" uses Register X29, scope (0->28)
  ## Param "return_addr" uses Register X8, scope (0->30)
  ## Scoped Variable "evw" uses Register X26, scope (0->30->31)
  
  ##############################################
  ###### Writing code for thread BFS_pull ######
  ##############################################
  ## Vertex structure 
  ## Operands:
  ##     X8  degree;
  ##     X9  orig_vid;
  ##     X10 vid;
  ##     X11 *neighbors;
  ##     X12 distance;
  ##     X13 parent;
  ##     X14 split_range;
  ##     X15 padding;
  # Writing code for event BFS_pull::kv_map
  tranBFS_pull__kv_map = efa.writeEvent('BFS_pull::kv_map')
  tranBFS_pull__kv_map.writeAction(f"entry: addi X7 X26 256") 
  tranBFS_pull__kv_map.writeAction(f"movlr 0(X26) X24 0 8") 
  ## The vertex is visited, skip it
  tranBFS_pull__kv_map.writeAction(f"clti X12 X27 0") 
  tranBFS_pull__kv_map.writeAction(f"xori X27 X27 1") 
  tranBFS_pull__kv_map.writeAction(f"cgt X12 X24 X28") 
  tranBFS_pull__kv_map.writeAction(f"xori X28 X28 1") 
  tranBFS_pull__kv_map.writeAction(f"and X27 X28 X29") 
  tranBFS_pull__kv_map.writeAction(f"beqiu X29 0 __if_kv_map_5_post") 
  tranBFS_pull__kv_map.writeAction(f"__if_kv_map_3_true: evi X2 X27 BFS_pull::kv_map_return 1") 
  tranBFS_pull__kv_map.writeAction(f"sendr_wcont X27 X2 X10 X10") 
  tranBFS_pull__kv_map.writeAction(f"yield") 
  ## The vertex has degree 0, skip it
  tranBFS_pull__kv_map.writeAction(f"__if_kv_map_5_post: bnei X8 0 __if_kv_map_11_post") 
  tranBFS_pull__kv_map.writeAction(f"__if_kv_map_9_true: evi X2 X27 BFS_pull::kv_map_return 1") 
  tranBFS_pull__kv_map.writeAction(f"sendr_wcont X27 X2 X10 X10") 
  tranBFS_pull__kv_map.writeAction(f"yield") 
  tranBFS_pull__kv_map.writeAction(f"__if_kv_map_11_post: sli X8 X27 3") 
  tranBFS_pull__kv_map.writeAction(f"add X11 X27 X22") 
  tranBFS_pull__kv_map.writeAction(f"addi X11 X17 0") 
  tranBFS_pull__kv_map.writeAction(f"addi X9 X20 0") 
  tranBFS_pull__kv_map.writeAction(f"beq X20 X10 __if_kv_map_16_false") 
  tranBFS_pull__kv_map.writeAction(f"__if_kv_map_15_true: sari X14 X18 32") 
  tranBFS_pull__kv_map.writeAction(f"movir X19 -1") 
  tranBFS_pull__kv_map.writeAction(f"sri X19 X19 32") 
  tranBFS_pull__kv_map.writeAction(f"and X14 X19 X19") 
  tranBFS_pull__kv_map.writeAction(f"jmp __if_kv_map_17_post") 
  tranBFS_pull__kv_map.writeAction(f"__if_kv_map_16_false: addi X10 X18 0") 
  tranBFS_pull__kv_map.writeAction(f"movir X19 1") 
  tranBFS_pull__kv_map.writeAction(f"__if_kv_map_17_post: movir X23 0") 
  tranBFS_pull__kv_map.writeAction(f"addi X7 X26 0") 
  tranBFS_pull__kv_map.writeAction(f"movlr 0(X26) X16 0 8") 
  tranBFS_pull__kv_map.writeAction(f"evi X2 X27 BFS_pull::rd_nlist_return 1") 
  tranBFS_pull__kv_map.writeAction(f"__while_kv_map_18_condition: ble X8 X23 __while_kv_map_20_post") 
  tranBFS_pull__kv_map.writeAction(f"__while_kv_map_19_body: send_dmlm_ld X17 X27 8") 
  tranBFS_pull__kv_map.writeAction(f"addi X23 X23 8") 
  tranBFS_pull__kv_map.writeAction(f"addi X17 X17 64") 
  tranBFS_pull__kv_map.writeAction(f"movir X28 16") 
  tranBFS_pull__kv_map.writeAction(f"bgt X28 X23 __if_kv_map_23_post") 
  tranBFS_pull__kv_map.writeAction(f"__if_kv_map_21_true: jmp __while_kv_map_20_post") 
  tranBFS_pull__kv_map.writeAction(f"__if_kv_map_23_post: jmp __while_kv_map_18_condition") 
  tranBFS_pull__kv_map.writeAction(f"__while_kv_map_20_post: movir X21 -1") 
  tranBFS_pull__kv_map.writeAction(f"yield") 
  
  # Writing code for event BFS_pull::rd_nlist_return
  tranBFS_pull__rd_nlist_return = efa.writeEvent('BFS_pull::rd_nlist_return')
  tranBFS_pull__rd_nlist_return.writeAction(f"entry: blti X21 0 __if_rd_nlist_return_2_post") 
  tranBFS_pull__rd_nlist_return.writeAction(f"__if_rd_nlist_return_0_true: subi X23 X23 8") 
  tranBFS_pull__rd_nlist_return.writeAction(f"bnei X23 0 __if_rd_nlist_return_8_post") 
  ## Finish fetching the neighbors, read the original vertex
  tranBFS_pull__rd_nlist_return.writeAction(f"__if_rd_nlist_return_6_true: sli X20 X27 6") 
  tranBFS_pull__rd_nlist_return.writeAction(f"add X16 X27 X26") 
  tranBFS_pull__rd_nlist_return.writeAction(f"evi X2 X27 BFS_pull::read_orig_vertex 1") 
  tranBFS_pull__rd_nlist_return.writeAction(f"send_dmlm_ld X26 X27 8") 
  tranBFS_pull__rd_nlist_return.writeAction(f"__if_rd_nlist_return_8_post: yield") 
  tranBFS_pull__rd_nlist_return.writeAction(f"__if_rd_nlist_return_2_post: ble X22 X17 __if_rd_nlist_return_14_post") 
  tranBFS_pull__rd_nlist_return.writeAction(f"__if_rd_nlist_return_12_true: send_dmlm_ld X17 X2 8") 
  tranBFS_pull__rd_nlist_return.writeAction(f"addi X23 X23 8") 
  tranBFS_pull__rd_nlist_return.writeAction(f"addi X17 X17 64") 
  tranBFS_pull__rd_nlist_return.writeAction(f"__if_rd_nlist_return_14_post: addi X3 X26 0") 
  tranBFS_pull__rd_nlist_return.writeAction(f"evi X2 X27 BFS_pull::read_vertex 1") 
  tranBFS_pull__rd_nlist_return.writeAction(f"bgt X22 X26 __if_rd_nlist_return_17_post") 
  tranBFS_pull__rd_nlist_return.writeAction(f"__if_rd_nlist_return_15_true: subi X23 X23 8") 
  tranBFS_pull__rd_nlist_return.writeAction(f"yield") 
  tranBFS_pull__rd_nlist_return.writeAction(f"__if_rd_nlist_return_17_post: sli X8 X29 6") 
  tranBFS_pull__rd_nlist_return.writeAction(f"add X16 X29 X28") 
  tranBFS_pull__rd_nlist_return.writeAction(f"send_dmlm_ld X28 X27 8") 
  tranBFS_pull__rd_nlist_return.writeAction(f"addi X26 X26 8") 
  tranBFS_pull__rd_nlist_return.writeAction(f"bgt X22 X26 __if_rd_nlist_return_20_post") 
  tranBFS_pull__rd_nlist_return.writeAction(f"__if_rd_nlist_return_18_true: subi X23 X23 7") 
  tranBFS_pull__rd_nlist_return.writeAction(f"yield") 
  tranBFS_pull__rd_nlist_return.writeAction(f"__if_rd_nlist_return_20_post: sli X9 X29 6") 
  tranBFS_pull__rd_nlist_return.writeAction(f"add X16 X29 X28") 
  tranBFS_pull__rd_nlist_return.writeAction(f"send_dmlm_ld X28 X27 8") 
  tranBFS_pull__rd_nlist_return.writeAction(f"addi X26 X26 8") 
  tranBFS_pull__rd_nlist_return.writeAction(f"bgt X22 X26 __if_rd_nlist_return_23_post") 
  tranBFS_pull__rd_nlist_return.writeAction(f"__if_rd_nlist_return_21_true: subi X23 X23 6") 
  tranBFS_pull__rd_nlist_return.writeAction(f"yield") 
  tranBFS_pull__rd_nlist_return.writeAction(f"__if_rd_nlist_return_23_post: sli X10 X29 6") 
  tranBFS_pull__rd_nlist_return.writeAction(f"add X16 X29 X28") 
  tranBFS_pull__rd_nlist_return.writeAction(f"send_dmlm_ld X28 X27 8") 
  tranBFS_pull__rd_nlist_return.writeAction(f"addi X26 X26 8") 
  tranBFS_pull__rd_nlist_return.writeAction(f"bgt X22 X26 __if_rd_nlist_return_26_post") 
  tranBFS_pull__rd_nlist_return.writeAction(f"__if_rd_nlist_return_24_true: subi X23 X23 5") 
  tranBFS_pull__rd_nlist_return.writeAction(f"yield") 
  tranBFS_pull__rd_nlist_return.writeAction(f"__if_rd_nlist_return_26_post: sli X11 X29 6") 
  tranBFS_pull__rd_nlist_return.writeAction(f"add X16 X29 X28") 
  tranBFS_pull__rd_nlist_return.writeAction(f"send_dmlm_ld X28 X27 8") 
  tranBFS_pull__rd_nlist_return.writeAction(f"addi X26 X26 8") 
  tranBFS_pull__rd_nlist_return.writeAction(f"bgt X22 X26 __if_rd_nlist_return_29_post") 
  tranBFS_pull__rd_nlist_return.writeAction(f"__if_rd_nlist_return_27_true: subi X23 X23 4") 
  tranBFS_pull__rd_nlist_return.writeAction(f"yield") 
  tranBFS_pull__rd_nlist_return.writeAction(f"__if_rd_nlist_return_29_post: sli X12 X29 6") 
  tranBFS_pull__rd_nlist_return.writeAction(f"add X16 X29 X28") 
  tranBFS_pull__rd_nlist_return.writeAction(f"send_dmlm_ld X28 X27 8") 
  tranBFS_pull__rd_nlist_return.writeAction(f"addi X26 X26 8") 
  tranBFS_pull__rd_nlist_return.writeAction(f"bgt X22 X26 __if_rd_nlist_return_32_post") 
  tranBFS_pull__rd_nlist_return.writeAction(f"__if_rd_nlist_return_30_true: subi X23 X23 3") 
  tranBFS_pull__rd_nlist_return.writeAction(f"yield") 
  tranBFS_pull__rd_nlist_return.writeAction(f"__if_rd_nlist_return_32_post: sli X13 X29 6") 
  tranBFS_pull__rd_nlist_return.writeAction(f"add X16 X29 X28") 
  tranBFS_pull__rd_nlist_return.writeAction(f"send_dmlm_ld X28 X27 8") 
  tranBFS_pull__rd_nlist_return.writeAction(f"addi X26 X26 8") 
  tranBFS_pull__rd_nlist_return.writeAction(f"bgt X22 X26 __if_rd_nlist_return_35_post") 
  tranBFS_pull__rd_nlist_return.writeAction(f"__if_rd_nlist_return_33_true: subi X23 X23 2") 
  tranBFS_pull__rd_nlist_return.writeAction(f"yield") 
  tranBFS_pull__rd_nlist_return.writeAction(f"__if_rd_nlist_return_35_post: sli X14 X29 6") 
  tranBFS_pull__rd_nlist_return.writeAction(f"add X16 X29 X28") 
  tranBFS_pull__rd_nlist_return.writeAction(f"send_dmlm_ld X28 X27 8") 
  tranBFS_pull__rd_nlist_return.writeAction(f"addi X26 X26 8") 
  tranBFS_pull__rd_nlist_return.writeAction(f"bgt X22 X26 __if_rd_nlist_return_38_post") 
  tranBFS_pull__rd_nlist_return.writeAction(f"__if_rd_nlist_return_36_true: subi X23 X23 1") 
  tranBFS_pull__rd_nlist_return.writeAction(f"yield") 
  tranBFS_pull__rd_nlist_return.writeAction(f"__if_rd_nlist_return_38_post: sli X15 X29 6") 
  tranBFS_pull__rd_nlist_return.writeAction(f"add X16 X29 X28") 
  tranBFS_pull__rd_nlist_return.writeAction(f"send_dmlm_ld X28 X27 8") 
  tranBFS_pull__rd_nlist_return.writeAction(f"yield") 
  
  # Writing code for event BFS_pull::read_vertex
  tranBFS_pull__read_vertex = efa.writeEvent('BFS_pull::read_vertex')
  tranBFS_pull__read_vertex.writeAction(f"entry: subi X23 X23 1") 
  tranBFS_pull__read_vertex.writeAction(f"clti X21 X26 0") 
  tranBFS_pull__read_vertex.writeAction(f"subi X24 X27 1") 
  tranBFS_pull__read_vertex.writeAction(f"ceq X12 X27 X28") 
  tranBFS_pull__read_vertex.writeAction(f"and X26 X28 X29") 
  tranBFS_pull__read_vertex.writeAction(f"beqiu X29 0 __if_read_vertex_5_post") 
  ## Insert into the frontier
  tranBFS_pull__read_vertex.writeAction(f"__if_read_vertex_3_true: addi X10 X21 0") 
  tranBFS_pull__read_vertex.writeAction(f"__if_read_vertex_5_post: bnei X23 0 __if_read_vertex_11_post") 
  tranBFS_pull__read_vertex.writeAction(f"__if_read_vertex_9_true: blti X21 0 __if_read_vertex_13_false") 
  ## Finish fetching the neighbors, read the original vertex
  tranBFS_pull__read_vertex.writeAction(f"__if_read_vertex_12_true: sli X20 X27 6") 
  tranBFS_pull__read_vertex.writeAction(f"add X16 X27 X26") 
  tranBFS_pull__read_vertex.writeAction(f"evi X2 X27 BFS_pull::read_orig_vertex 1") 
  tranBFS_pull__read_vertex.writeAction(f"send_dmlm_ld X26 X27 8") 
  tranBFS_pull__read_vertex.writeAction(f"yield") 
  tranBFS_pull__read_vertex.writeAction(f"jmp __if_read_vertex_11_post") 
  tranBFS_pull__read_vertex.writeAction(f"__if_read_vertex_13_false: evi X2 X26 BFS_pull::kv_map_return 1") 
  tranBFS_pull__read_vertex.writeAction(f"sendr_wcont X26 X2 X20 X20") 
  tranBFS_pull__read_vertex.writeAction(f"yield") 
  tranBFS_pull__read_vertex.writeAction(f"__if_read_vertex_11_post: yield") 
  
  # Writing code for event BFS_pull::read_orig_vertex
  tranBFS_pull__read_orig_vertex = efa.writeEvent('BFS_pull::read_orig_vertex')
  tranBFS_pull__read_orig_vertex.writeAction(f"entry: bne X12 X24 __if_read_orig_vertex_2_post") 
  tranBFS_pull__read_orig_vertex.writeAction(f"__if_read_orig_vertex_0_true: evi X2 X26 BFS_pull::kv_map_return 1") 
  tranBFS_pull__read_orig_vertex.writeAction(f"sendr_wcont X26 X2 X20 X20") 
  tranBFS_pull__read_orig_vertex.writeAction(f"yield") 
  tranBFS_pull__read_orig_vertex.writeAction(f"__if_read_orig_vertex_2_post: evi X2 X26 BFS_pull::update_siblings 1") 
  tranBFS_pull__read_orig_vertex.writeAction(f"addi X7 X27 104") 
  tranBFS_pull__read_orig_vertex.writeAction(f"movlr 0(X27) X28 0 8") 
  tranBFS_pull__read_orig_vertex.writeAction(f"sendr_wcont X28 X26 X19 X19") 
  tranBFS_pull__read_orig_vertex.writeAction(f"addi X3 X29 32") 
  tranBFS_pull__read_orig_vertex.writeAction(f"sendr2_dmlm_wret X29 BFS_pull::write_dram_return X24 X21 X30") 
  tranBFS_pull__read_orig_vertex.writeAction(f"sladdii X19 X23 1 1") 
  tranBFS_pull__read_orig_vertex.writeAction(f"yield") 
  
  # Writing code for event BFS_pull::update_siblings
  tranBFS_pull__update_siblings = efa.writeEvent('BFS_pull::update_siblings')
  tranBFS_pull__update_siblings.writeAction(f"entry: add X18 X19 X26") 
  tranBFS_pull__update_siblings.writeAction(f"sli X18 X28 6") 
  tranBFS_pull__update_siblings.writeAction(f"add X16 X28 X29") 
  tranBFS_pull__update_siblings.writeAction(f"addi X29 X27 32") 
  tranBFS_pull__update_siblings.writeAction(f"addi X8 X28 0") 
  tranBFS_pull__update_siblings.writeAction(f"evi X2 X29 BFS_pull::write_dram_return 1") 
  tranBFS_pull__update_siblings.writeAction(f"__while_update_siblings_3_condition: ble X26 X18 __while_update_siblings_5_post") 
  tranBFS_pull__update_siblings.writeAction(f"__while_update_siblings_4_body: sendr2_dmlm X27 X29 X24 X21") 
  tranBFS_pull__update_siblings.writeAction(f"sendr_dmlm X28 X29 X18") 
  tranBFS_pull__update_siblings.writeAction(f"addi X18 X18 1") 
  tranBFS_pull__update_siblings.writeAction(f"addi X27 X27 64") 
  tranBFS_pull__update_siblings.writeAction(f"addi X28 X28 8") 
  tranBFS_pull__update_siblings.writeAction(f"jmp __while_update_siblings_3_condition") 
  tranBFS_pull__update_siblings.writeAction(f"__while_update_siblings_5_post: yield") 
  
  # Writing code for event BFS_pull::write_dram_return
  tranBFS_pull__write_dram_return = efa.writeEvent('BFS_pull::write_dram_return')
  tranBFS_pull__write_dram_return.writeAction(f"entry: subi X23 X23 1") 
  tranBFS_pull__write_dram_return.writeAction(f"bnei X23 0 __if_write_dram_return_5_post") 
  tranBFS_pull__write_dram_return.writeAction(f"__if_write_dram_return_3_true: evi X2 X26 BFS_pull::kv_map_return 1") 
  tranBFS_pull__write_dram_return.writeAction(f"sendr_wcont X26 X2 X20 X20") 
  tranBFS_pull__write_dram_return.writeAction(f"__if_write_dram_return_5_post: yield") 
  
